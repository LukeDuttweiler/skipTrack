% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/skipTrackMulti.R
\name{skipTrackMulti}
\alias{skipTrackMulti}
\title{Perform skipTrackMCMC on multiple chains using parallel or sequential computing}
\usage{
skipTrackMulti(
  cycleDat,
  reps = 1000,
  chains,
  useParallel = TRUE,
  li = FALSE,
  S = NULL,
  liHyperparams = c(kappa = 180, gamma = 6, alpha = 2, beta = 20),
  ...
)
}
\arguments{
\item{cycleDat}{A data.frame with columns 'Individual' and 'TrackedCycles', representing the observed cycle lengths for each individual.}

\item{reps}{The number of MCMC iterations (steps) to perform. Default is 1000.}

\item{chains}{Number of chains to run in parallel or sequentially.}

\item{useParallel}{Logical, indicating whether to use parallel processing.}

\item{...}{
  Arguments passed on to \code{\link[=skipTrackMCMC]{skipTrackMCMC}}
  \describe{
    \item{\code{initialParams}}{A list of initial parameter values for the MCMC algorithm.
Default values are provided for pi, muis, tauis, mu, rho, and cs.}
  }}
}
\value{
A list containing the results of skipTrackMCMC for each chain.
}
\description{
This function runs skipTrackMCMC on multiple chains,
either in parallel or sequentially.
}
\examples{
#EXAMPLES SKIPPED TO AVOID 10 MINUTE PACKAGE BUILD
#tstData <- simTrackData(1000, skipProb = c(.8, .15, .05))

# Run skipTrackMulti with parallel processing on 4 chains
#result_parallel <- skipTrackMulti(cycleDat = tstData, reps = 1000, chains = 4,
# useParallel = TRUE)

# Run skipTrackMulti sequentially on 3 chains
#result_sequential <- skipTrackMulti(cycleDat = tstData, reps = 1000, chains = 3,
# useParallel = FALSE)

# View the results
#View(result_parallel)
#View(result_sequential)

}
\seealso{
\code{\link{skipTrackMCMC}}
}
